Introduction

Transport Layer Security (TLS) is added to existing protocols to protect communication confidentiality, integrity, and authenticity. 
Consequently, HTTP, POP3, SMTP, and IMAP become HTTPS, POP3S, SMTPS, and IMAPS, where the appended “S” stands for Secure. We will examine these protocols and the benefits we reaped from TLS.

Similarly, it is deemed insecure to remotely access a system using the TELNET protocol; Secure Shell (SSH) was created to provide a secure way to access remote systems.
Furthermore, SSH is an extensible protocol that offers added security features for other protocols.

Learning Objectives
Upon finishing this room, you will learn about:
SSL/TLS
How to secure existing plaintext protocols:
HTTP
SMTP
POP3
IMAP
How SSH replaced the plaintext TELNET
How VPN creates a secure network over an insecure one

TLS

In the early 1990s, Netscape Communications recognised the need for secure communication on the World Wide Web. They eventually developed SSL (Secure Sockets Layer) and released SSL 2.0 in 1995 as the first public version. 
In 1999, the Internet Engineering Task Force (IETF) developed TLS (Transport Layer Security). Although very similar, TLS 1.0 was an upgrade to SSL 3.0 and offered various improved security measures. 
In 2018, TLS had a significant overhaul of its protocol and TLS 1.3 was released. 

Like SSL, its predecessor, TLS is a cryptographic protocol operating at the OSI model’s transport layer. It allows secure communication between a client and a server over an insecure network. By secure, we refer to confidentiality and integrity; TLS ensures that no one can read or modify the exchanged data.

The first step for every server (or client) that needs to identify itself is to get a signed TLS certificate. Generally, the server administrator creates a Certificate Signing Request (CSR) and submits it to a Certificate Authority (CA); the CA verifies the CSR and issues a digital certificate. 
Once the (signed) certificate is received, it can be used to identify the server (or the client) to others, who can confirm the validity of the signature. For a host to confirm the validity of a signed certificate, the certificates of the signing authorities need to be installed on the host. 
In the non-digital world, this is similar to recognising the stamps of various authorities. The screenshot below shows the trusted authorities installed in a web browser.

Generally speaking, getting a certificate signed requires paying an annual fee. However, Let’s Encrypt allows you to get your certificate signed for free.

Question 1: What is the protocol name that TLS upgraded and built upon?
Answer: SSL

Question 2: Which type of certificates should not be used to confirm the authenticity of a server?
Answer: Which type of certificates should not be used to confirm the authenticity of a server?

HTTPS

HTTP: HTTP relies on TCP and uses port 80 by default. We also saw how all HTTP traffic was sent in cleartext for anyone to intercept and monitor.

After resolving the domain name to an IP address, the client will carry out the following two steps:
1. Establish a TCP three-way handshake with the target server
2. Communicate using the HTTP protocol; for example, issue HTTP requests, such as GET / HTTP/1.1

HTTP Over TLS: HTTPS stands for Hypertext Transfer Protocol Secure. It is basically HTTP over TLS. 

Requesting a page over HTTPS will require the following three steps (after resolving the domain name):
1. Establish a TCP three-way handshake with the target server
2. Establish a TLS session
3. Communicate using the HTTP protocol; for example, issue HTTP requests, such as GET / HTTP/1.1

Note: TLS negotiation and establishment take place with step 1 and 2.

Getting the Encryption Key

The TLS session establishing part of packets/data would have the key needed for decrypting data that is coming across.

Note: The key takeaway is that TLS offered security for HTTP without requiring any changes in the lower or higher layer protocols. In other words, TCP and IP were not modified, while HTTP was sent over TLS the way it would be sent over TCP.

Question 3: How many packets did the TLS negotiation and establishment take in the Wireshark HTTPS screenshots above?
Answer: 8

Question 4: What is the number of the packet that contain the GET /login when accessing the website over HTTPS?
Answer: 10

SMTPS, POP3S, and IMAPS

Adding TLS to SMTP, POP3, and IMAP is no different than adding TLS to HTTP.

The insecure versions use the default TCP port numbers shown in the table below:
Protocol	Default Port Number
HTTP	    80
SMTP	    25
POP3	    110
IMAP	    143

The secure versions, i.e., over TLS, use the following TCP port numbers by default:
Protocol	Default Port Number
HTTPS	    443
SMTPS	    465 and 587
POP3S	    995
IMAPS	    993

Question 5: If you capture network traffic, in which of the following protocols can you extract login credentials: SMTPS, POP3S, or IMAP?
Answer: IMAP

SSH

Tatu Ylönen developed the Secure Shell (SSH) protocol and released SSH-1 in 1995 as freeware. 
(Interestingly, it was the same year that Netscape Communications released the SSL 2.0 protocol.) A more secure version, SSH-2, was defined in 1996. In 1999, the OpenBSD developers released OpenSSH, an open-source implementation of SSH. 

OpenSSH offers several benefits. We will list a few key points:
1. Secure authentication: Besides password-based authentication, SSH supports public key and two-factor authentication.
2. Confidentiality: OpenSSH provides end-to-end encryption, protecting against eavesdropping. Furthermore, it notifies you of new server keys to protect against man-in-the-middle attacks.
3. Integrity: In addition to protecting the confidentiality of the exchanged data, cryptography also protects the integrity of the traffic.
4. Tunneling: SSH can create a secure “tunnel” to route other protocols through SSH. This setup leads to a VPN-like connection.
5. X11 Forwarding: If you connect to a Unix-like system with a graphical user interface, SSH allows you to use the graphical application over the network.

Note: TELNET server listens on port 23, the SSH server listens on port 22.

Question 6: What is the name of the open-source implementation of the SSH protocol?
Answer: OpenSSH

SFTP and FTPS

SFTP stands for SSH File Transfer Protocol and allows secure file transfer. It is part of the SSH protocol suite and shares the same port number, 22. 
If enabled in the OpenSSH server configuration, you can connect using a command such as sftp username@hostname. Once logged in, you can issue commands such as get filename and put filename to download and upload files, respectively.

Note: Setting up an SFTP server is as easy as enabling an option within the OpenSSH server.

FTPS stands for File Transfer Protocol Secure. How is FTPS secured? Yes, you are correct to estimate that it is secured using TLS, just like HTTPS. While FTP uses port 21, FTPS usually uses port 990. 
It requires certificate setup, and it can be tricky to allow over strict firewalls as it uses separate connections for control and data transfer.

Note: Like HTTPS, SMTPS, POP3S, IMAPS, and other protocols that rely on TLS for security, FTPS requires a proper TLS certificate to run securely.

Question 7: Click on the View Site button to access the related site. Please follow the instructions on the site to obtain the flag.
Answer: THM{Protocols_secur3d}
Note: View the Securing_Cleartext_Protocol.png to view solution and get better understanding on the ports.

List of unsecure portocols and there corresponding secure protocols.
Protocols           Unsecure_ports          Protocols           Secured_ports 
TELNET              23                      SSH                 22
HTTP                80                      HTTPS               443
SMTP                25                      SMTPS               465 and 587
POP3                110                     POP3S               995
IMAP                143                     IMAPS               993
FTP                 21                      FTPS                990

VPN

No mechanisms are in place to ensure that all data leaving or entering a computer is protected from disclosure and alteration. A popular solution was the setup of a VPN connection.
Almost all companies require “private” information exchange in their virtual network. So, a VPN provides a very convenient and relatively inexpensive solution. The main requirements are Internet connectivity and a VPN server and client.

Once a VPN tunnel is established, all our Internet traffic will usually be routed over the VPN connection, i.e. via the VPN tunnel. 
Consequently, when we try to access an Internet service or web application, they will not see our public IP address but the VPN server’s. This is why some Internet users connect over VPN to circumvent geographical restrictions. 
Furthermore, the local ISP will only see encrypted traffic, which limits its ability to censor Internet access.
Although in many scenarios, one would establish a VPN connection to route all the traffic over the VPN tunnel, some VPN connections don’t do this. The VPN server may be configured to give you access to a private network but not to route your traffic.

Note: Some VPN servers leak your actual IP address, although they are expected to route all your traffic over the VPN. Depending on why you are using a VPN connection, you might need to run a few more tests, such as a DNS leak test.

Question 8: What would you use to connect the various company sites so that users at a remote office can access resources located within the main branch?
Answer: VPN

Closing Notes

The three objectives covered are:
1. The first approach is to use TLS, which provides a convenient way to secure many protocols, such as HTTP, SMTP, and POP3. Protocols secured with TLS usually get an S, for Secure, added to their names, such as HTTPS, SMTPS, and POP3S.
2. The second approach to secure network traffic is to use SSH. Although SSH is mainly used for remote access, it can also transfer files securely and establish secure tunnels. Creating an SSH tunnel is a solid choice if you want to pass the traffic of a plaintext protocol, such as VNC.
3. The last approach we covered to secure network traffic is using VPN connections. A VPN connection is usually the perfect option for connecting two company branches.

Question 9: One of the packets contains login credentials. What password did the user submit?
Answer: THM{B8WM6P}