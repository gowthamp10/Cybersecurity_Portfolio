Introduction to Python

This room will teach you:
- Variables
- Loops
- Functions
- Data Structures
- If statements
- Files

In programming, syntax is important as it describes the structure of a valid programming language. 
In simple terms, syntax tells the computer how to read code using rules that control the structure of symbols, punctuation, and words of a programming language.

Hello World

code:
# This is an example comment
print("Hello World")

Breakdown:
- line 1 is a comment, a line starting with a hashtag (#) symbol and is not run by the computer. A comment is written by the programmer (you) to help other people reading the code understand what is going on.
- We can control what is output to the screen by using the print() statement. Anything inside of the parenthesis () will be output. 

Question 1: On the code editor, print "Hello World". What is the flag?
Ans: THM{PRINT_STATEMENTS}

Mathematical Operators

The table below shows the different operations.

Operator	        Syntax	            Example
Addition	        +	                1 + 1 = 2
Subtraction	        -	                5 - 1 = 4
Multiplication	    *	                10 * 10 = 100
Division	        /	                10 / 2 = 5
Modulus	            %	                10 % 2 = 0
Exponent	        **	                5**2 = 25 (52)

These operators are used to evaluate a program's condition at a particular state.

Symbol	                        Syntax
Greater than	                >
Less than	                    <
Equal to	                    ==
Not Equal to	                !=
Greater than or equal to	    >=
Less than or equal	            <=

Question 2: In the code editor, print the result of 21 + 43. What is the flag?
Ans: THM{ADDITI0N}

Question 3: Print the result of 142 - 52. What is the flag?
Ans: THM{SUBTRCT}

Question 4: Print the result of 10 * 342. What is the flag?
Ans: THM{MULTIPLICATION_PYTHON}

Question 5: Print the result of 5 squared. What is the flag?
Ans: THM{EXP0N3NT_POWER}

Variables and Data Types

Variables allow you to store and update data in a computer program. You have a variable name and store data to that name.

The data types to know are:
String - Used for combinations of characters, such as letters or symbols
Integer - Whole numbers
Float - Numbers that contain decimal points or for fractions
Boolean - Used for data that is restricted to True or False options
List - Series of different data types stored in a collection

Question 6: On another new line, print out the value of height. What is the flag that appears?
Ans: THM{VARIABL3S}

Logical and Boolean Operators

Logical operators allow assignment and comparisons to be made and are used in conditional testing (such as if statements).

Logical Operation	                Operator	                Example
Equivalence	                        ==	                        if x == 5
Less than	                        <	                        if x < 5
Less than or equal to	            <=	                        if x <= 5
Greater than	                    >	                        if x > 5
Greater than or equal to	        >=	                        if x >= 5

Boolean operators are used to connect and compare relationships between statements. Like an if statement, conditions can be true or false.

Boolean Operation	                                                    Operator	                Example
Both conditions must be true for the statement to be true	            AND	                        if x >= 5 AND x <= 100Returns TRUE if x isa number between 5 and 100
Only one condition of the statement needs to be true 	                OR	                        if x == 1 OR x == 10Returns TRUE if X is 1 or 10
If a condition is the opposite of an argument	                        NOT	                        if NOT yReturns TRUE if the y value is False 

(Shipping Project) Introduction to If Statements

Using "if statements" allows programs to make decisions. They let a program chose a decision based on a condition. 

Question 7: Once you've written the application in the code editor's shipping.py tab, a flag will appear, which is the answer to this question.
Ans: THM{IF_STATEMENT_SHOPPING}

Question 8: In shipping.py, on line 15 (when using the Code Editor's Hint), change the customer_basket_cost variable to 101 and re-run your code. You will get a flag (if the total cost is correct based on your code); the flag is the answer to this question.
Ans: THM{MY_FIRST_APP}

Loops

In programming, loops allow programs to iterate and perform actions a number of times. There are two types of loops, for and while loops.

While Loops
We can have the loop run indefinitely or (similar to an if statement) determine how many times the loop should run based on a condition.
Syntax:
while <condition>:
    statements

Example:
i = 1
while i <= 10:
     print(i)
     i = i + 1

For Loops
A for loop is used to iterate over a sequence such as a list. Lists are used to store multiple items in a single variable, and are created using square brackets
Syntax:
for <condition>
    statements

Example:
websites = ["facebook.com", "google.com", "amazon.com"]
for site in websites:
     print(site)

Question 9: On the code editor, click back on the "script.py" tab and code a loop that outputs every number from 0 to 50.
Ans: THM{L00PS_WHILE_FOR}

(Bitcoin Project)Introduction to Functions

As programs start to get bigger and more complex, some of your code will be repetitive, writing the same code to do the same calculations, and this is where functions come in. 
A function is a block of code that can be called at different places in your program.
Syntax:
def <function_name>(<variables>):
    statements 

Example 1:
def sayHello(name):
     print("Hello " + name + "! Nice to meet you.")

sayHello("ben") # Output is: Hello Ben! Nice to meet you

In the function, notice the indentation. Similar to if statements, anything after the colons that is indented is considered part of the function.

Example 2:
def calcCost(item):
     if(item == "sweets"):
          return 3.99
     elif (item == "oranges"):
          return 1.99
     else:
          return 0.99

spent = 10
spent = spent + calcCost("sweets")
print("You have spent:" + str(spent))

Scenario 1: You've invested in Bitcoin and want to write a program that tells you when the value of Bitcoin falls below a particular value in dollars.
In the code editor, click on the bitcoin.py tab. Write a function called bitcoinToUSD with two parameters: bitcoin_amount, the amount of Bitcoin you own, and bitcoin_value_usd, the value of bitcoin in USD. The function should return usd_value, which is your bitcoin value in USD (to calculate this, in the function, you times bitcoin_amount variable by bitcoin_value_usd variable and return the value). The start of the function should look like this:
def bitcoinToUSD(bitcoin_amount, bitcoin_value_usd):

Question 10: Once you've written the bitcoinToUSD function, use it to calculate the value of your Bitcoin in USD, and then create an if statement to determine if the value falls below $30,000; if it does, output a message to alert you (via a print statement).
Ans: THM{BITC0IN_INVESTOR}

Scenario 2: 1 Bitcoin is now worth $24,000. In the code editor on line 14, update the bitcoin_to_usd variable value to 24000 and see if your Python program recognises that your investment is below the $30,000 threshold.

Files

It's common to write a script and import or export it from a file; whether that be as a way to store the output of your script or to import a list of 100's of websites from a file to enumerate.,
Syntax:
f = open("<file_name>", "r")
    print(f.read())

Example:
f = open("file_name.txt", "r")
    print(f.read())







