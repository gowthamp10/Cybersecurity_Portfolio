Introduction

Focuses on the offensive security tool Gobuster, often used for reconnaissance. We will explore how this tool can enumerate web directories, subdomains, and virtual hosts.

Learning Objectives
1. Understanding the basics of enumeration
2. How to use Gobuster to enumerate web directories and files
3. How to use Gobuster to enumerate subdomains
4. How to use Gobuster to enumerate virtual hosts
5. How to use a wordlist


Environment and Setup

Important: We work in a local network with a DNS server on the web server. 

To ensure we can resolve the domains used throughout this room, you need to change the /etc/resolv-dnsmasq file:
1. Open up a terminal on the the AttackBox and enter the command: sudo nano /etc/resolv-dnsmasq.
2. Insert nameserver <MACHINE_IP> as the first line.
3. Save the file by pressing CTRL+O, followed by pressing ENTER, and then exit the editor by pressing CTRL+X.
4. Enter the command /etc/init.d/dnsmasq restart to restart the Dnsmasq service.

File resolv-dnsmasq:
nameserver <MACHINE_IP>


Gobuster: Introduction

Gobuster is an open-source offensive tool written in Golang. It enumerates web directories, DNS subdomains, vhosts, Amazon S3 buckets, and Google Cloud Storage by brute force, using specific wordlists and handling the incoming responses.
The phases of ethical hacking, we can place Gobuster between the reconnaissance and scanning phases.

The concepts of enumeration and Brute Force:
1. Enumeration: Enumeration is the act of listing all the available resources, whether they are accessible or not. For example, Gobuster enumerates web directories.
2. Brute Force: Brute force is the act of trying every possibility until a match is found. It is like having ten keys and trying them all on a lock until one fits. Gobuster uses wordlists for this purpose.

Gobuster: Overview
command: "gobuster --help". You should get the help page for the Gobuster tool

The help page contains multiple sections:
1. Usage: Shows the syntax on how to use the command.
2. Available Commands: Multiple commands are available to aid us in enumerating directories, files, DNS subdomains, Google Cloud Storage buckets, and Amazon AWS S3 buckets.
3. Flags: These are specific options we can configure to customize our commands. 

Example:
command:"gobuster dir -u "http://www.example.thm/" -w /usr/share/wordlists/dirb/small.txt -t 64"
Description:
1. gobuster dir indicates that we will use the directory and file enumeration mode.
2. -u "http://www.example.thm/" tells Gobuster that the target URL is http://example.thm/.
3. -w /usr/share/wordlists/dirb/small.txt directs Gobuster to use the small.txt wordlist to brute force the web directories. Gobuster will use each entry in the wordlist to form a new URL and send a GET request to that URL. If the first entry of the wordlist were images, Gobuster would send a GET request to http://example.thm/images/.
4. -t 64 sets the number of threads Gobuster will use to 64. This improves the performance drastically.

Question 1: What flag do we use to specify the target URL?
Answer: -u 

Question 2: What command do we use for the subdomain enumeration mode?
Answer: dns 


Use Case: Directory and File Enumeration

Gobuster has a dir mode, allowing users to enumerate website directories and their files. This mode is useful when you are performing a penetration test and would like to see what the directory structure of a website is and what files it contains. 
Directory structures of websites and web apps follow a particular convention, making them susceptible to Brute Force using wordlists. 
example, the  directory structure on the web server hosting WordPress looks something  like this:
command: "tree -L 3 -d"
.
└── html
    └── wordpress
        ├── wp-admin
        ├── wp-content
        └── wp-includes

Note: Gobuster is powerful because it allows you to scan the website and return the status codes. These status codes immediately tell you if you, as an outside user, can request that directory or not.

Help

gobuster --help command opens up the help page of gobuster.
Additionally gobuster dir --help opens up the help page for the dir option.

Few of the options available on the help page of gobuster dir --help.
Flag	    Long Flag	                Description
-c	        --cookies	                This flag configures a cookie to pass along each request, such as a session ID.
-x	        --extensions	            This flag specifies which file extensions you want to scan for. E.g., .php, .js
-H	        --headers	                This flag configures an entire header to pass along with each request.
-k	        --no-tls-validation	        This flag  skips the process that checks the certificate when https is used. It often happens for CTF events or test rooms like the ones on THM a self-signed certificate is used. This causes an error during the TLS check.
-n	        --no-status	                You can set this flag when you don’t want to see status codes of each response received. This helps keep the output on the screen clear.
-P	        password	                You can set this flag together with the --username flag to execute authenticated requests. This is handy when you have obtained credentials from a user.
-s	        --status-codes	            With this flag, you can configure which status codes of the received responses you want to display, such as 200, or a range like 300-400.
-b	        --status-codes-blacklist	This flag allows you to configure which status codes of the received responses you don’t want to display. Configuring this flag overrides the -s flag.
-U	        --username	                You can set this flag together with the --password flag to execute authenticated requests. This is handy when you have obtained credentials from a user.
-r	        --followredirect	        This flags configures Gobuster to follow the redirect that it received as a response to the sent request. A HTTP redirect status code (e.g., 301 or 302) is used to redirect the client to a different URL.

How To Use dir Mode

syntax: gobuster dir -u "<URL>" -w /path/to/wordlist

practical example of how to enumerate directories and files with Gobuster dir mode:
command: gobuster dir -u "http://www.example.thm" -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -r
This command scans all the directories located at www.example.thm using the wordlist directory-list-2.3-medium.txt. Let’s look a bit closer at each part of the command:
1. gobuster dir: Configures Gobuster to use the directory and file enumeration mode.
2. -u http://www.example.thm:
    The URL will be the base path where Gobuster starts looking. So, the URL  above is using the root web directory. For example, in a typical Apache installation on Linux, this is /var/www/html. So if you have a “resources” directory and you want to enumerate that directory, you’d set the URL as http://www.example.thm/resources. You can also think of this like http://www.example.thm/path/to/folder.
    The URL must contain the protocol used, in this case, HTTP. This is important and required. If you pass the wrong protocol, the scan will fail.
    In the host part of the URL, you can either fill in the IP or the HOSTNAME. However, it is important to mention that when using the IP, you may target a different website than intended. A web server can host multiple websites using one IP (this technique is also called virtual hosting). Use the HOSTNAME if you want to be sure.
    Gobuster does not enumerate recursively. So, if the results show a directory path you are interested in, you will have to enumerate that specific directory.
3. -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt configures Gobuster to use the directory-list-2.3-medium.txt wordlist to enumerate. Each entry of the wordlist is appended to the configured URL.
4. -r configures Gobuster to follow the redirect responses received from the sent requests. If a status code 301 was received, Gobuster will navigate to the redirect URL that is included in the response.

example where we use the -x flag to specify what type of files we want to enumerate:
command: gobuster dir -u "http://www.example.thm" -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x .php,.js
This command will look for directories located at http://example.thm using the wordlist directory-list-2.3-medium.txt. In addition to directory listing, this command also lists all the files that have a .php or .js extension.

Question 3: Which flag do we have to add to our command to skip the TLS verification? Enter the long flag notation.
Question 4: Enumerate the directories of www.offensivetools.thm. Which directory catches your attention?
Question 5: Continue enumerating the directory found in question 2. You will find an interesting file there with a .js extension. What is the flag found in this file?
Checkout the activity file.


Use Case: Subdomain Enumeration

DNS mode: This mode allows Gobuster to brute force subdomains. During a penetration test,  checking the subdomains of your target’s top domain is essential. Just because something is patched in the regular domain, it doesn't mean it is also patched in the subdomain. An opportunity to exploit a vulnerability in one of these subdomains may exist.

Help
Type the following command to display the help: gobuster dns --help
some of the commonly used flags:

Flag	        Long Flag	        Description
-c              --show-cname        Show CNAME Records (cannot be used with the -i flag).
-i              --show-ips          Including this flag shows IP addresses that the domain and subdomains resolve to.
-r              --resolver          This flag configures a custom DNS server to use for resolving.
-d              --domain            This flag configures the domain you want to enumerate.

How to Use dns Mode
command syntax:
gobuster dns -d <domain> -w /path/to/wordlist

example of how to enumerate  subdomains with Gobuster dns mode:"gobuster dns -d example.thm -w /usr/share/wordlists/SecLists/Discovery/DNS/subdomains-top1million-5000.txt"
1. gobuster dns enumerates subdomains on the configured domain.
2. -d example.thm sets the target to the example.thm domain.
3. -w /usr/share/wordlists/SecLists/Discovery/DNS/subdomains-top1million-5000.txt sets the wordlist to subdomains-top1million-5000.txt. Gobuster uses each entry of this list to construct a new DNS query. If the first entry of this list is 'all', the query would be all.example.thm.

Question 6: Apart from the dns keyword and the -w flag, which shorthand flag is required for the command to work?
Question 7: Use the commands learned in this task, how many subdomains are configured for the offensivetools.thm domain?
Checkout the activity file 


Use Case: Vhost Enumeration

VHOST mode: This mode allows Gobuster to brute force virtual hosts. Virtual hosts are different websites on the same machine. Sometimes, they look like subdomains, but don’t be deceived! Virtual hosts are IP-based and are running on the same server. Subdomains are set up in DNS.

The  difference between vhost and dns mode is in the way Gobuster scans:
1. vhost mode will navigate to the URL created by combining the configured HOSTNAME (-u flag) with an entry of a wordlist.
2. dns mode will do a DNS lookup to the FQDN created by combining the configured domain name (-d flag) with an entry of a wordlist.

Help
Type the  following command to display the help: gobuster vhost --help

some of the commonly used flags:
Short Flag	    Long Flag	        Description
-u              --url               Specifies the base URL (target domain) for brute-forcing virtual hostnames.
                --append-domain     Appends the base domain to each word in the wordlist (e.g., word.example.com).
-m              --method            Specifies the HTTP method to use for the requests (e.g., GET, POST).
                --domain            Appends a domain to each wordlist entry to form a valid hostname (useful if not provided explicitly).
                --exclude-length    Excludes results based on the length of the response body (useful to filter out unwanted responses).
-r              --follow-redirect   Follows HTTP redirects (useful for cases where subdomains may redirect).

How To Use vhost Mode
syntax: gobuster vhost -u "<TargetURL>" -w /path/to/wordlist
Notice that the command also includes the flags -u and -w, in addition to the vhost keyword. These two flags are required for the Gobuster vhost enumeration to work.

Example: gobuster vhost -u "http://MACHINE_IP" --domain example.thm -w /usr/share/wordlists/SecLists/Discovery/DNS/subdomains-top1million-5000.txt --append-domain --exclude-length 250-320 
1. gobuster vhost instructs Gobuster to enumerate virtual hosts.
2. -u "http://MACHINE_IP" sets the URL to browse to MACHINE_IP.
3. -w /usr/share/wordlists/SecLists/Discovery/DNS/subdomains-top1million-5000.txt configures Gobuster to use the subdomains-top1million-5000.txt wordlist. Gobuster appends each entry in the wordlist to the configured domain. If no domain is explicitly configured with the --domain flag, Gobuster will extract it from the URL. E.g., test.example.thm, help.example.thm, etc. If any subdomains are found, Gobuster will report them to you in the terminal.
4. --domain example.thm sets the top- and second-level domains in the Hostname: part of the request to example.thm.
5. --append-domain appends the configured domain to each entry in the wordlist. If this flag is not configured, the set hostname would be www, blog, etc. This will cause the command to work incorrectly and display false positives.
6. --exclude-length filters the responses we get from the sent web requests. With this flag, we can filter out the false positives. If you run the command without this flag, you will notice you will get a lot of false positives like "Found: Orion.example.thm Status: 404 [Size: 279]" or  "Found: pm.example.thm Status: 404 [Size: 276]". These false positives typically have a similar response size, so we can use this to filter out most false positives. We expect to get a 200 OK response back to have a true positive. There are, however, exceptions, but it is not in the scope of this room to go deeper into these.

command is much more complex than the base command syntax. It contains many more configured flags. This will often be the case in realistic tests
This requires us to give in extra flags like --domain and --append-domain. We need to look at the web requests Gobuster sends to understand better how these flags work. 
Below, you can see a basic GET request to www.example.thm:
GET / HTTP/1.1
Host: www.example.thm
User-Agent: gobuster/3.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive

Note: Gobuster will send multiple requests, each time changing the Host: part of the request.

We can break this down into three parts:
1. www: This is the subdomain. This is the part that Gobuster will fill in with each entry of the configured wordlist.
2. .example: This is the second-level domain. You can configure this with the --domain flag (this needs to be configured together with the top-level domain).
3. .thm: This is the top-level domain. You can configure this with the --domain flag (this needs to be configured together with the second-level domain).

Question 8: Use the commands learned in this task to answer the following question: How many vhosts on the offensivetools.thm domain reply with a status code 200?
Checkout the activity file.


Conclusion

We have covered three different modes of the Gobuster tool:
1. dns mode: enumerates dns subdomains.
2. dir mode: enumerates directories.
3. vhost mode: enumerates virtual hosts.

difference between virtual hosts and subdomains and the way Gobuster scans for these:
1. dns mode uses the DNS services to scan for subdomains using the configured domain and wordlist.
2. vhost mode sends web requests using the configured URL and wordlist.

