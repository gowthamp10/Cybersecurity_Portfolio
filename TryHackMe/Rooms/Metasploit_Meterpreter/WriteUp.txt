Introduction to Meterpreter

Meterpreter is a Metasploit payload that supports the penetration testing process with many valuable components. 
Meterpreter will run on the target system and act as an agent within a command and control architecture. You will interact with the target operating system and files and use Meterpreter's specialized commands.
Meterpreter has many versions which will provide different functionalities based on the target system.

How does Meterpreter work?
1. Meterpreter runs on the target system but is not installed on it. It runs in memory and does not write itself to the disk on the target. This feature aims to avoid being detected during antivirus scans. By default, most antivirus software will scan new files on the disk (e.g. when you download a file from the internet) Meterpreter runs in memory (RAM - Random Access Memory) to avoid having a file that has to be written to the disk on the target system (e.g. meterpreter.exe). This way, Meterpreter will be seen as a process and not have a file on the target system.
2. Meterpreter also aims to avoid being detected by network-based IPS (Intrusion Prevention System) and IDS (Intrusion Detection System) solutions by using encrypted communication with the server where Metasploit runs (typically your attacking machine). If the target organization does not decrypt and inspect encrypted traffic (e.g. HTTPS) coming to and going out of the local network, IPS and IDS solutions will not be able to detect its activities.

Note: Meterpreter is recognized by major antivirus software, this feature provides some degree of stealth.

getpid command, which returns the process ID
The process ID (or process identifier) is used by operating systems to identify running processes. All processes running in Linux or Windows will have a unique ID number; this number is used to interact with the process when the need arises

Even if we were to go a step further and look at DLLs (Dynamic-Link Libraries) used by the Meterpreter process (PID 1304 in this case), we still would not find anything jumping at us.
command: tasklist /m /fi "pid eq <Pid>"

Techniques and tools that can be used to detect Meterpreter are present out side the scope of the room. Additionally remember that the meterpreter is detected by many antivirus softwares.

Note:  Meterpreter will establish an encrypted (TLS) communication channel with the attacker's system.


Meterpreter Flavors

Metasploit payloads can be initially divided into two categories:
1. inline (also called single): The inline payloads are sent in a single step.
2. staged: staged payloads are sent to the target in two steps. An initial part is installed (the stager) and requests the rest of the payload. This allows for a smaller initial payload size. 

The easiest way to have an idea about available Meterpreter versions could be to list them using msfvenom.
command: msfvenom --list payloads | grep meterpreter

The list will show Meterpreter versions available for the following platforms:
1. Android
2. Apple iOS
3. Java
4. Linux
5. OSX
6. PHP
7. Python
8. Windows

Decision on which version of Meterpreter to use will be mostly based on three factors;
1. The target operating system (Is the target operating system Linux or Windows? Is it a Mac device? Is it an Android phone? etc.)
2. Components available on the target system (Is Python installed? Is this a PHP website? etc.)
3. Network connection types you can have with the target system (Do they allow raw TCP connections? Can you only have an HTTPS reverse connection? Are IPv6 addresses not as closely monitored as IPv4 addresses? etc.) 

If you are not using Meterpreter as a standalone payload generated by Msfvenom, your choice may also be limited by the exploit. You will notice some exploits will have a default Meterpreter payload

You can also list other available payloads using the show payloads command with any module. 


Meterpreter Commands

help on any Meterpreter session will list all available commands.
Commands are built-in tools available on Meterpreter. They will run on the target system without loading any additional script or executable files.

Meterpreter will provide you with three primary categories of tools:
1. Built-in commands
2. Meterpreter tools
3. Meterpreter scripting

Upon running the help command, you will see Meterpreter commands are listed under different categories.
1. Core commands
2. File system commands
3. Networking commands
4. System commands
5. User interface commands
6. Webcam commands
7. Audio output commands
8. Elevate commands
9. Password database commands
10. Timestomp commands
Please note that the list above was taken from the output of the help command on the Windows version of Meterpreter (windows/x64/meterpreter/reverse_tcp)

Note: These will be different for other Meterpreter versions.

Meterpreter commands
Core commands will be helpful to navigate and interact with the target system. Below are some of the most commonly used. Remember to check all available commands running the help command once a Meterpreter session has started.

Core commands
1. background: Backgrounds the current session
2. exit: Terminate the Meterpreter session
3. guid: Get the session GUID (Globally Unique Identifier)
4. help: Displays the help menu
5. info: Displays information about a Post module
6. irb: Opens an interactive Ruby shell on the current session
7. load: Loads one or more Meterpreter extensions
8. migrate: Allows you to migrate Meterpreter to another process
9. run: Executes a Meterpreter script or Post module
10. sessions: Quickly switch to another session

File system commands
1. cd: Will change directory
2. ls: Will list files in the current directory (dir will also work)
3. pwd: Prints the current working directory
4. edit: will allow you to edit a file
5. cat: Will show the contents of a file to the screen
6. rm: Will delete the specified file
7. search: Will search for files
8. upload: Will upload a file or directory
9. download: Will download a file or directory

Networking commands
1. arp: Displays the host ARP (Address Resolution Protocol) cache
2. ifconfig: Displays network interfaces available on the target system
3. netstat: Displays the network connections
4. portfwd: Forwards a local port to a remote service
5. route: Allows you to view and modify the routing table

System commands
1. clearev: Clears the event logs
2. execute: Executes a command
3. getpid: Shows the current process identifier
4. getuid: Shows the user that Meterpreter is running as
5. kill: Terminates a process
6. pkill: Terminates processes by name
7. ps: Lists running processes
8. reboot: Reboots the remote computer
9. shell: Drops into a system command shell
10. shutdown: Shuts down the remote computer
11. sysinfo: Gets information about the remote system, such as OS

Others Commands (these will be listed under different menu categories in the help menu)
1. idletime: Returns the number of seconds the remote user has been idle
2. keyscan_dump: Dumps the keystroke buffer
3. keyscan_start: Starts capturing keystrokes
4. keyscan_stop: Stops capturing keystrokes
5. screenshare: Allows you to watch the remote user's desktop in real time
6. screenshot: Grabs a screenshot of the interactive desktop
7. record_mic: Records audio from the default microphone for X seconds
8. webcam_chat: Starts a video chat
9. webcam_list: Lists webcams
10. webcam_snap: Takes a snapshot from the specified webcam
11. webcam_stream: Plays a video stream from the specified webcam
12. getsystem: Attempts to elevate your privilege to that of local system
13. hashdump: Dumps the contents of the SAM database

Note: Although all these commands may seem available under the help menu, they may not all work. For example, the target system might not have a webcam, or it can be running on a virtual machine without a proper desktop environment.


Post-Exploitation with Meterpreter

Meterpreter provides you with many useful commands that facilitate the post-exploitation phase.

Help: This command will give you a list of all available commands in Meterpreter. As we have seen earlier, Meterpreter has many versions, and each version may have different options available. Typing help once you have a Meterpreter session will help you quickly browse through available commands.

Meterpreter commands: 
1. The getuid command will display the user with which Meterpreter is currently running. This will give you an idea of your possible privilege level on the target system (e.g. Are you an admin level user like NT AUTHORITY\SYSTEM or a regular user?)
2. The ps command will list running processes. The PID column will also give you the PID information you will need to migrate Meterpreter to another process.

Migrate: Migrating to another process will help Meterpreter interact with it. For example, if you see a word processor running on the target (e.g. word.exe, notepad.exe, etc.), you can migrate to it and start capturing keystrokes sent by the user to this process.
Migrating to another process may also help you to have a more stable Meterpreter session.
Note: Some Meterpreter versions will offer you the keyscan_start, keyscan_stop, and keyscan_dump command options to make Meterpreter act like a keylogger.

Point to Remember: Be careful; you may lose your user privileges if you migrate from a higher privileged (e.g. SYSTEM) user to a process started by a lower privileged user (e.g. webserver). You may not be able to gain them back.

Hashdump: The hashdump command will list the content of the SAM database. The SAM (Security Account Manager) database stores user's passwords on Windows systems. These passwords are stored in the NTLM (New Technology LAN Manager) format.
Note:you may still discover the cleartext password using online NTLM databases or a rainbow table attack. These hashes can also be used in Pass-the-Hash attacks to authenticate to other systems that these users can access the same network.

Search: The search command is useful to locate files with potentially juicy information. 
In a CTF context, this can be used to quickly find a flag or proof file, while in actual penetration testing engagements, you may need to search for user-generated files or configuration files that may contain password or account information.

Shell: The shell command will launch a regular command-line shell on the target system. Pressing CTRL+Z will help you go back to the Meterpreter shell.

Post-Exploitation Challenge

Commands mentioned previously, such as getsystem and hashdump will provide important leverage and information for privilege escalation and lateral movement.
Meterpreter is also a good base you can use to run post-exploitation modules available on the Metasploit framework. Finally, you can also use the load command to leverage additional tools such as Kiwi or even the whole Python language.

The post-exploitation phase will have several goals; Meterpreter has functions that can assist all of them.
1. Gathering further information about the target system.
2. Looking for interesting files, user credentials, additional network interfaces, and generally interesting information on the target system.
3. Privilege escalation.
4. Lateral movement.

Note: Post Exploitation goals will change according to the loaded menu, so running the help command after loading a module is always a good idea.

Question 1: What is the computer name?
Question 2: What is the target domain?
Question 3: What is the name of the share likely created by the user?
Question 4: What is the NTLM hash of the jchambers user?
Question 5: What is the cleartext password of the jchambers user?
Question 6: Where is the "secrets.txt"  file located? (Full path of the file)
Question 7: What is the Twitter password revealed in the "secrets.txt" file?
Question 8: Where is the "realsecret.txt" file located? (Full path of the file)
Question 9: What is the real secret?

Note: Perform the actions provided in the activity file to get the answers



