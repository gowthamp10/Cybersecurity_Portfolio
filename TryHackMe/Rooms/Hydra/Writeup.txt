Hydra Introduction

What is Hydra?
Hydra is a brute force online password cracking program, a quick system login password “hacking” tool.

Hydra can run through a list and “brute force” some authentication services. Imagine trying to manually guess someone’s password on a particular service (SSH, Web Application Form, FTP or SNMP) - we can use Hydra to run through a password list and speed this process up for us, determining the correct password.

Hydra supports, i.e., has the ability to brute force the following protocols: “Asterisk, AFP, Cisco AAA, Cisco auth, Cisco enable, CVS, Firebird, FTP, HTTP-FORM-GET, HTTP-FORM-POST, HTTP-GET, HTTP-HEAD, HTTP-POST, HTTP-PROXY, HTTPS-FORM-GET, HTTPS-FORM-POST, HTTPS-GET, HTTPS-HEAD, HTTPS-POST, HTTP-Proxy, ICQ, IMAP, IRC, LDAP, MEMCACHED, MONGODB, MS-SQL, MYSQL, NCP, NNTP, Oracle Listener, Oracle SID, Oracle, PC-Anywhere, PCNFS, POP3, POSTGRES, Radmin, RDP, Rexec, Rlogin, Rsh, RTSP, SAP/R3, SIP, SMB, SMTP, SMTP Enum, SNMP v1+v2+v3, SOCKS5, SSH (v1 and v2), SSHKEY, Subversion, TeamSpeak (TS2), Telnet, VMware-Auth, VNC and XMPP.”
According to git repo: https://github.com/vanhauser-thc/thc-hydra

For more information on the options of each protocol in Hydra, visit: https://en.kali.tools/?p=220

Installing Hydra
you can install Hydra on an Ubuntu or Fedora system by executing apt install hydra or dnf install hydra


Using Hydra

Note: The options we pass into Hydra depend on which service (protocol) we’re attacking. 
Hydra Commands:
example, if we wanted to brute force FTP with the username being user and a password list being passlist.txt, we’d use the following command:
Usage: hydra -l user -P passlist.txt ftp://10.10.58.44

1. SSH
Syntax: hydra -l <username> -P <full path to pass> <IP> -t 4 ssh
Option details:
-l:	specifies the (SSH) username for login
-P:	indicates a list of passwords
-t:	sets the number of threads to spawn

example, command:"hydra -l root -P passwords.txt 10.10.58.44 -t 4 ssh" will run with the following arguments:
1. Hydra will use root as the username for ssh
2. It will try the passwords in the passwords.txt file
3. There will be four threads running in parallel as indicated by -t 4

2. Post Web Form
Use Hydra to brute force web forms too. You must know which type of request it is making; GET or POST methods are commonly used. You can use your browser’s network tab (in developer tools) to see the request types or view the source code.
Syntax: sudo hydra <username> <wordlist> <IP/HOST> http-post-form "<path>:<login_credentials>:<invalid_response>"

options:
-l:	the username for (web form) login
-P:	the password list to use
http-post-form:	the type of the form is POST
<path>:	the login page URL, for example, login.php
<login_credentials>: the username and password used to log in, for example, username=^USER^&password=^PASS^
<invalid_response>:	part of the response when the login fails
-V:	verbose output for every attempt

concrete example Hydra command to brute force a POST login form:
command: "hydra -l <username> -P <wordlist> 10.10.58.44 http-post-form "/:username=^USER^&password=^PASS^:F=incorrect" -V"
1. The login page is only /, i.e., the main IP address.
2. The username is the form field where the username is entered
3. The specified username(s) will replace ^USER^
4. The password is the form field where the password is entered
5. The provided passwords will be replacing ^PASS^
6. Finally, F=incorrect is a string that appears in the server reply when the login fails

Note: You should now have enough information to put this to practice and brute force your credentials to the deployed machine/Target

Question 1: Use Hydra to bruteforce molly's web password. What is flag 1?
Question 2: Use Hydra to bruteforce molly's SSH password. What is flag 2?
