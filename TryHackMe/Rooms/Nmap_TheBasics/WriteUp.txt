Introduction

Imagine the scenario where you are connected to a network and using various network resources, such as email and web browsing. Two questions arise. The first is how we can discover other live devices on this network or on other networks. The second is how we can find out the network services running on these live devices; examples include SSH and web servers.
A very efficient solution that can solve the above two requirements and many more is the Nmap network scanner. Nmap is an open-source network scanner that was first published in 1997. Since then, plenty of features and options have been added. It is a powerful and flexible network scanner that can be adapted to various scenarios and setups.

Learning Objectives
This room aims to provide you with the basics necessary to use the Nmap scanner or simply nmap. 

In particular, you will learn how to:
Discover live hosts
Find running services on the live hosts
Distinguish the different types of port scans
Detect the versions of the running services
Control the timing
Format the output

Host Discovery: Who Is Online

Nmap uses various sophisticated ways to discover live hosts.
Nmap uses multiple ways to specify its targets:
1. IP range using -: If you want to scan all the IP addresses from 192.168.0.1 to 192.168.0.10, you can write 192.168.0.1-10
2. IP subnet using /: If you want to scan a subnet, you can express it as 192.168.0.1/24, and this would be equivalent to 192.168.0.0-255
3. Hostname: You can also specify your target by hostname, for example, example.thm

Nmap offers the -sn option, i.e., ping scan -> discover the online hosts on a network

Scanning a “Local” Network
Note: “local” to refer to the network we are directly connected 
Using -sn option to perform ping scan. 
Usage: nmap -sn <x.x.x.x>/<subnet>
Working: When scanning a directly connected network, Nmap starts by sending ARP requests. When a device responds to the ARP request, Nmap labels it with “Host is up”.
Benefits: we can look up the MAC addresses of the devices. Consequently, we can figure out the network card vendors, which is beneficial information as it can help us guess the type of target device(s).

Scanning a “Remote” Network
Note: “remote” means that at least one router separates our system from this network
Using -sn option to perform ping scan.
Usage: nmap -sn <x.x.x.x>/<subnet>
Working: Sends ICMP echo packets to all the IP present in the range based on the reply determines if the host is up. Additionally if host doesn't respond to 2 ICMP pings, It sends TCP pings to 443 with SYN flag and 80 with ACK flag. Based on the reply determines if the host is up.

Note: -sn doesn't make any noise in the network.
It is worth noting that we can have more control over how Nmap discovers live hosts such as -PS[portlist], -PA[portlist], -PU[portlist] for TCP SYN, TCP ACK, and UDP discovery via the given ports.

Nmap offers a list scan with the option -sL. This scan only lists the targets to scan without actually scanning them.
For example, nmap -sL 192.168.0.1/24 will list the 256 targets that will be scanned. This option helps confirm the targets before running the actual scan.

Question 1: What is the last IP address that will be scanned when your scan target is 192.168.0.1/27?

Note: perform the acticity based on th question to get the answer.


Port Scanning: Who Is Listening

Network services listening on these live hosts. By network service, we mean any process that is listening for incoming connections on a TCP or UDP port. Common network services include web servers, which usually listen on TCP ports 80 and 443, and DNS servers, which typically listen on UDP (and TCP) port 53.
Note: By design, TCP has 65,535 ports, and the same applies to UDP. 

Scanning TCP Ports
The easiest and most basic way to know whether a TCP port is open would be to attempt to telnet to the port. 
This procedure is not very different from Nmap’s connect scan.

Connect Scan
The connect scan can be triggered using -sT. It tries to complete the TCP three-way handshake with every target TCP port. If the TCP port turns out to be open and Nmap connects successfully, Nmap will tear down the established connection.

SYN Scan (Stealth)
SYN scan using the -sS flag, SYN scan only executes the first step: it sends a TCP SYN packet. Consequently, the TCP three-way handshake is never completed. The advantage is that this is expected to lead to fewer logs as the connection is never established, and hence, it is considered a relatively stealthy scan.

Scanning UDP Ports
Many use UDP. Examples include DNS, DHCP, NTP (Network Time Protocol), SNMP (Simple Network Management Protocol), and VoIP (Voice over IP). UDP does not require establishing a connection and tearing it down afterwards. Furthermore, it is very suitable for real-time communication, such as live broadcasts. All these are reasons to consider scanning for and discovering services listening on UDP ports.

-sU: to scan for UDP services. Because UDP is simpler than TCP, we expect the traffic to differ. The screenshot below shows several ICMP destination unreachable (port unreachable) responses as Nmap sends UDP packets to closed UDP ports.

Limiting the Target Ports
Nmap scans the most common 1,000 ports by default. Nmap offers you a few more options.
1. -F is for Fast mode, which scans the 100 most common ports (instead of the default 1000).
2. -p[range] allows you to specify a range of ports to scan. For example, -p10-1024 scans from port 10 to port 1024, while -p-25 will scan all the ports between 1 and 25. Note that -p- scans all the ports and is equivalent to -p1-65535 and is the best option if you want to be as thorough as possible.

Summary
Option	            Explanation
-sT	                TCP connect scan – complete three-way handshake
-sS	                TCP SYN – only first step of the three-way handshake
-sU	                UDP scan
-F	                Fast mode – scans the 100 most common ports
-p[range]	        Specifies a range of port numbers – -p- scans all the ports

Question 2: How many TCP ports are open on the target system at MACHINE_IP?
Question 3: Find the listening web server on MACHINE_IP and access it with your browser. What is the flag that appears on its main page?

Note: perform the acticity based on th question to get the answer.


Version Detection: Extract More Information

OS Detection(-O option)
As the name implies, the OS detection option triggers Nmap to rely on various indicators to make an educated guess about the target OS.
Example: it is detecting the target has Linux 4.x or 5.x running. That’s actually true. However, there is no perfectly accurate OS detector. The statement that it is between 4.15 and 5.8 is very close as the target host’s OS is 5.15.

Service and Version Detection(-sV option)
This is very convenient for gathering more information about your target with fewer keystrokes. The terminal output below shows an additional column called “VERSION”, indicating the detected SSH server version.
Note: -A. This option enables OS detection, version scanning, and traceroute, among other things.

Forcing the Scan(-Pn option)
When we run our port scan, such as using -sS, there is a possibility that the target host does not reply during the host discovery phase (e.g. a host doesn’t reply to ICMP requests). Consequently, Nmap will mark this host as down and won’t launch a port scan against it. We can ask Nmap to treat all hosts as online and port scan every host, including those that didn’t respond during the host discovery phase. This choice can be triggered by adding the -Pn option.

Summary
Option	    Explanation
-O	        OS detection
-sV	        Service and version detection
-A	        OS detection, version detection, and other additions
-Pn	        Scan hosts that appear to be down

Question 4: What is the name and detected version of the web server running on MACHINE_IP?

Note: perform the acticity based on th question to get the answer.


Timing: How Fast is Fast

Nmap provides various options to control the scan speed and timing.
Running your scan at its normal speed might trigger an IDS or other security solutions. It is reasonable to control how fast a scan should go. Nmap gives you six timing templates, and the names say it all: paranoid (0), sneaky (1), polite (2), normal (3), aggressive (4), and insane (5). You can pick the timing template by its name or number. For example, you can add -T0 (or -T 0) or -T paranoid to opt for the slowest timing.

Timing	
T0 (paranoid)	
T1 (sneaky)	
T2 (polite)	
T3 (normal)	
T4 (aggressive)	

A second helpful option is the number of parallel service probes. The number of parallel probes can be controlled with --min-parallelism <numprobes> and --max-parallelism <numprobes>. These options can be used to set a minimum and maximum on the number of TCP and UDP port probes active simultaneously for a host group. By default, nmap will automatically control the number of parallel probes. If the network is performing poorly, i.e., dropping packets, the number of parallel probes might fall to one; furthermore, if the network performs flawlessly, the number of parallel probes can reach several hundred.
A similar helpful option is the --min-rate <number> and --max-rate <number>. As the names indicate, they can control the minimum and maximum rates at which nmap sends packets. The rate is provided as the number of packets per second. It is worth mentioning that the specified rate applies to the whole scan and not to a single host.
--host-timeout <time>. This option specifies the maximum time you are willing to wait, and it is suitable for slow hosts or hosts with slow network connections.

Option	                                                                Explanation
-T<0-5>	                                                                Timing template – paranoid (0), sneaky (1), polite (2), normal (3), aggressive (4), and insane (5)
--min-parallelism <numprobes> and --max-parallelism <numprobes>	        Minimum and maximum number of parallel probes
--min-rate <number> and --max-rate <number>	                            Minimum and maximum rate (packets/second)
--host-timeout	                                                        Maximum amount of time to wait for a target host


Question 5: What is the non-numeric equivalent of -T4?
Answer: -T aggressive


Output: Controlling What You See

two main features:
1. Showing additional information while a scan takes place
2. Choosing the file format to save the scan report

Verbosity and Debugging
The best way to get more updates about what’s happening is to enable verbose output by adding -v.
Most likely, the -v option is more than enough for verbose output; however, if you are still unsatisfied, you can increase the verbosity level by adding another “v” such as -vv or even -vvvv. You can also specify the verbosity level directly, for example, -v2 and -v4. You can even increase the verbosity level by pressing “v” after the scan already started.
-d for debugging-level output. Similarly, you can increase the debugging level by adding one or more “d” or by specifying the debugging level directly. The maximum level is -d9; before choosing that, make sure you are ready for thousands of information and debugging lines.

Saving Scan Report
In many cases, we would need to save the scan results. Nmap gives us various formats. The three most useful are normal (human-friendly) output, XML output, and grepable output, in reference to the grep command. 
You can select the scan report format as follows:
-oN <filename> - Normal output
-oX <filename> - XML output
-oG <filename> - grep-able output (useful for grep and awk)
-oA <basename> - Output in all major formats

Question 6: What option must you add to your nmap command to enable debugging? 
Answer: -d 


Conclusion and Summary

In this room, we learned how to use Nmap to discover live hosts on any network. We also explored the common types of port scans and how we can use Nmap to find service version numbers. We also learned how to control the timing of the scan, and finally, we covered the different formats for saving Nmap scan results.
It is worth noting that it is best to run Nmap with sudo privileges so that we can make use of all its features. Running Nmap with local user privileges will still work; however, you should expect many features to be unavailable. You get a minimal portion of Nmap’s power when running it as a local user. For instance, Nmap would automatically use SYN scan (-sS) if you are running it with sudo privileges and will default to connect scan (-sT) if run as a local user. The reason is that crafting certain packets, such as sending a TCP SYN packet, requires root privileges.

Option	                                                            Explanation
-sL	List scan                                                   – list targets without scanning
Host Discovery	
-sn	Ping scan                                                   – host discovery only
Port Scanning	
-sT	TCP connect scan                                            – complete three-way handshake
-sS	TCP SYN                                                     – only first step of the three-way handshake
-sU	UDP Scan
-F	Fast mode                                                   – scans the 100 most common ports
-p[range]	                                                    Specifies a range of port numbers – -p- scans all the ports
-Pn	                                                            Treat all hosts as online – scan hosts that appear to be down
Service Detection	
-O	                                                            OS detection
-sV	                                                            Service version detection
-A	                                                            OS detection, version detection, and other additions
Timing	
-T<0-5>	                                                        Timing template – paranoid (0), sneaky (1), polite (2), normal (3), aggressive (4), and insane (5)
--min-parallelism <numprobes> and --max-parallelism <numprobes>	Minimum and maximum number of parallel probes
--min-rate <number> and --max-rate <number>	                    Minimum and maximum rate (packets/second)
--host-timeout	                                                Maximum amount of time to wait for a target host
Real-time output	
-v	                                                            Verbosity level – for example, -vv and -v4
-d	                                                            Debugging level – for example -d and -d9
Report	
-oN <filename>	                                                Normal output
-oX <filename>	                                                XML output
-oG <filename>	                                                grep-able output
-oA <basename>	                                                Output in all major formats


